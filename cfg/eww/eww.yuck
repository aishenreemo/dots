(defwindow bar
    :stacking "bg"
    :windowtype "dock"
    :wm-ignore false
    :reserve (struts :distance "40px" :side "top")
    :geometry (geometry
        :x "0%"
        :y "4px"
        :width "99%"
        :height "40px"
        :anchor "top center"
    )

    (bar_widget)
)

(defwindow calendar
    :windowtype "dock"
    :stacking "bg"
    :wm-ignore true

    :geometry (geometry 
        :x "-2%"
        :y "50px"
        :width "250px" 
        :height "240px"
        :anchor "top right"
    )

    (calendar_widget)
)

(defwindow dashboard
    :windowtype "dock"
    :stacking "fg"
    :wm-ignore true
    :geometry (geometry 
        :x "-20%"
        :width "26%" 
        :height "72%"
        :anchor "left center"
    )
    
    (dashboard_widget)
)

(defwidget bar_widget []
    (box
        :orientation "h"

        (left)
        (center)
        (right)
    )
)

(defvar calendar_show false)
(defwidget calendar_widget []
    (revealer 
        :transition "crossfade" 
        :reveal calendar_show

        (calendar)
    )
)

(defvar dashboard_show false)
(defwidget dashboard_widget []
    (box 
        :class "dashboard-window"
        :space-evenly "false"  
        :orientation "h"
        (box :class "dashboard-spacer" :style {dashboard_show ? "padding-right: 20em;" : "padding-right: 0em;"})
        (box :class "dashboard-box")
    )
)

(defvar menu_show false)
(defwidget menu []
    (box
        :class "menu-container"
        :orientation "h"
        :space-evenly false
        :spacing "0.5"

        (button 
            :onclick "eww update menu_show=${menu_show ? false : true}"
            :class "menu-button" 
            :tooltip "menu" ""
        )

        (revealer
            :transition "slideright"
            :reveal menu_show
            :duration "600ms"

            (box 
                :orientation "h" 
                :space-evenly "false"
                (button 
                    :class "menu-buttons app"
                    :onclick "rofi -disable-history -modi 'drun' -show 'drun' &"
                    ""
                )
                (button 
                    :class "menu-buttons dashboard-btn"
                    :onclick "scripts/open_dashboard &"
                    ""
                )
            )
        )
    )
)

(defwidget left [] 
    (box
        :valign "center"
        :halign "start"
        :orientation "h"
        :class "left"

        (menu)
    )
)


(deflisten workspaces_listener "scripts/get_workspaces_data")
(defwidget center [] 
    (box
        :orientation "h"
        :valign "center"
        :halign "center"
        :hexpand false
        :class "center"

        (literal :content workspaces_listener)
    )
)

(defvar volume_show false)
(defpoll volume_value :interval "250ms" "scripts/get_volume")
(defwidget volume []
    (box
        :class "volume"
        :orientation "h"
        :space-evenly false
        :spacing "0.5"

        (revealer
            :transition "slideleft"
            :reveal volume_show
            :duration "600ms"

            (scale 
                :class "volume-scale"         
                :value "${volume_value}.0"
                :orientation "h"      
                :tooltip "Volume: ${volume_value}%" 
                :flipped true
                :min 0 
                :max 101 
                :onchange "amixer -D pulse sset Master {}%" 
            )
        )
        (button 
            :onclick "eww update volume_show=${volume_show ? false : true}"
            :class "volume-icon" ""
        )
    )
)

(defpoll hour :interval "1s" "date '+%0l'")
(defpoll minute :interval "1s" "date '+%M'")
(defpoll am_pm :interval "1h" "date '+%p'")
(defwidget time []
    (box
        :class "time" 
        (button :onclick "scripts/open_calendar &" "${hour} : ${minute} ${am_pm}")
    )
)

(defvar power_menu_show false)
(defwidget power_menu []
    (box
        :class "power-menu"
        :orientation "h"
        :space-evenly false
        :spacing "0.5"

        (revealer
            :transition "slideleft"
            :reveal power_menu_show
            :duration "600ms"

            (box 
                :orientation "h" 
                :space-evenly "false"
                (button :class "system reboot" :tooltip "Reboot" :onclick "systemctl reboot" "")
                (button :class "system logout" :tooltip "Logout" :onclick "bspc quit" "")
                (button :class "system shutdown" :tooltip "Shutdown" :onclick "systemctl poweroff" "")
            )
        )
        (button 
            :onclick "eww update power_menu_show=${power_menu_show ? false : true}"
            :class "action-center" 
            :tooltip "Action Center" ""
        )
    )
)

(defwidget right []
    (box
        :valign "center"
        :orientation "h"
        :halign "end"
        :class "right"
        :space-evenly false
        :spacing 2

        (volume)
        (time)
        (power_menu)
    )
)
